install.packages("devtools")
library(devtools)
find_rtools()
search()
install.packages("KernSmooth")
library(KernSmooth)
library(devtools)
search()
install.packages("swirl")
?strptime
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
dir()
?list.files
args(list.files())
args(list.files)
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd(testdir)
setwd("testdir")
getwd()
play()
getwd()
nxt()
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
play()
file.info("mytest.R")$mode
nxt()
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path()
file.path("mytest3.R")
file.path("folder1")
file.path("folder1", "folder2")
?dir.create
s
?file.path
dir.create(file.path("testdir2", testdir3), recursive = TRUE)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
':'
":"
´:´
`'`
?`'`
?`:`
seq(1,20)
seq(1, 10, by = 0.5)
seq(0, 10, by = 0.5)
seq(5, 10, length = 30)
my_seq = seq(5, 10, length = 30)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 1
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- paste(my_char, "Igor")
my_name <- c(my_char, "Igor")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf= NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE &$ c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4
| > 3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(19)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("ctmr")
submit()
mad_libs(place = "Trujillo", adjective = "cyka", noun = "blyat")
submit()
submit()
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(D2)
unclass(D2)
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
ls
ls()
dir()
some_value <- dir()
some_value
dir("snes")
swirl()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
my_data
my_data$patient
class(my_data$patient)
class(my_data$age)
my_data$age
my_data[["patient"]]
my_data[["age"]]
c()
x <- c()
x
x <- c(x, 1)
x
getwd()
setwd("..")
getwd()
setwd("Documents/Proyectos/Coursera/")
dir()
library(pollutantmean.R)
library("pollutantmean.R")
source("pollutantmean.R")
search()
pollutantmean()
pollutantmean
pollutantmean("specdata", "sulfate")
?paste
pollutantmean("specdata", "sulfate")
pollutantmean("specdata", "sulfate")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate")
warnings()
source("pollutantmean.R")
pollutantmean("specdata", "sulfate")
warnings()
pollutantmean("specdata", "sulfate")
pollutantmean("specdata", "sulfate")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate")
pollutantmean("specdata", "sulfate", id = 1)
pollutantmean("specdata", "sulfate", id = 1)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", id = 1)
pollutantmean("specdata", "nitrate", id = 1)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id = 1)
pollutantmean("specdata", "nitrate", id = 1)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id = 1)
pollutantmean("specdata", "nitrate", id = 1)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id = 1)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id = 1)
pollutantmean("specdata", "nitrate")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate")
mean(c(0, 0))
pollutantmean("specdata", "nitrate", id=289)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id=289)
mean(c())
p <- c(1,1)
p[c(FALSE, FALSE)]
mean(p[c(FALSE, FALSE)])
p[c(TRUE, TRUE)]
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id=289)
pollutantmean("specdata", "nitrate")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70)
pollutantmean("specdata", "nitrate", 71)
pollutantmean("specdata", "nitrate", 72)
data.frame
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
?cor
source("complete.R")
complete("specdata", 30:25)
complete("specdata", 1)
?na.omit
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
corr("specdata")
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
cr <- corr("specdata")
head(Cr)
head(cr)
summary(cr)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
source("complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
